(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{374:function(t,n,a){t.exports=a.p+"assets/img/whyHoist.340ec35d.png"},405:function(t,n,a){"use strict";a.r(n);var s=a(44),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"execution-context"}},[t._v("Execution Context")]),t._v(" "),s("blockquote",[s("p",[t._v("Execution Context, abbreviated form EC, is an abstract concept used by "),s("code",[t._v("ECMA-262")]),t._v(" specification for "),s("strong",[t._v("typitication")]),t._v(" and "),s("strong",[t._v("differenciation")]),t._v(" of an execution code.")])]),t._v(" "),s("blockquote",[s("p",[t._v("In layman's term, Execution Context roughly equates to the "),s("code",[t._v("environment")]),t._v(" that the JavaScript code is executing in.")])]),t._v(" "),s("p",[t._v("The standard doesn't define the accurate structure of EC. Logically, set of EC form a "),s("code",[t._v("stack")]),t._v(". The bottom of the "),s("code",[t._v("stack")]),t._v(" is "),s("code",[t._v("global execution context")]),t._v(". The top is the "),s("code",[t._v("active execution context")]),t._v(". The stack would be modified by push or pop during entering or exiting various kinds of EC.")]),t._v(" "),s("h2",{attrs:{id:"types-of-ec"}},[t._v("Types of EC")]),t._v(" "),s("p",[t._v("There are 3 types of EC: "),s("em",[t._v("Global")]),t._v(", "),s("em",[t._v("Function")]),t._v(" and "),s("em",[t._v("Eval")]),t._v(".")]),t._v(" "),s("p",[t._v("To make things clear, we could define the stack of execution context as an array:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pseudo-code")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("A new EC would be pushed into the stack every time one entering a function, even if the function is called "),s("strong",[t._v("recurssively")]),t._v(" or as "),s("strong",[t._v("constructor")]),t._v(". Also the "),s("code",[t._v("eval")]),t._v(" function can also trigger a push-in under unusual circumstances.")]),t._v(" "),s("h3",{attrs:{id:"global"}},[t._v("Global")]),t._v(" "),s("p",[t._v("The EC generated at "),s("code",[t._v("Program")]),t._v(" level. For example, load extenal "),s("code",[t._v(".js")]),t._v(" files or run code inside the "),s("code",[t._v("<script><\/script>")]),t._v(". So it looks like an initialization:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pseudo-code")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"function"}},[t._v("Function")]),t._v(" "),s("p",[t._v("The stack would be pushed into a new elements when entering a new function showed as following:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The ECStack would be modified:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pseudo-code")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First activation")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" FunctionContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Recurssively activation")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" FunctionContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Recurssively")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" FunctionContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Besides, every "),s("code",[t._v("return")]),t._v(" of a function would exit the current execution context, and ECStack would do the pop behavior accordingly. After all this code finished, ECStack would contain "),s("code",[t._v("GlobalContext")]),t._v(" only. So if there is a endless recurssive function, the function's execution context will be pushed into ECStack unceasingly until exceeding the "),s("code",[t._v("Maximum call stack size")]),t._v(". That's the reason why "),s("strong",[t._v("Stack Overflow")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"eval"}},[t._v("Eval")]),t._v(" "),s("p",[t._v("There are something different when calling a "),s("code",[t._v("eval")]),t._v(" function. In this case, there is a new concept of "),s("code",[t._v("calling context")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var x = 1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var y = 2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "y" is not defined')]),t._v("\n")])])]),s("p",[t._v("The ECStack would be modified like following:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pseudo-code")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialization")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eval('var x = 1');")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" evalContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        callingContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" GlobalContext\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exit eval('var x = 1');")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call foo()")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" FunctionContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eval('var y = 2');")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" evalContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        callingContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" FunctionContext\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" FunctionContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exit eval('var y = 2');")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" FunctionContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo() return")]),t._v("\nExecutionContextStack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    GlobalContext\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("ALWAYS avoid using eval()")]),t._v(" "),s("p",[s("code",[t._v("eval()")]),t._v(" is a dangerous function because it executes the code with the privileges of the caller! It could be affected by a malicious party."),s("br"),t._v(" "),s("code",[t._v("eval")]),t._v(" is slower than the alternatives because it has to invode the JavaScript interpreter. While others are optimized by modern JS engines. Modern JS engines convert javascript to machine code."),s("br"),t._v("\nThe "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#never_use_eval!",target:"_blank",rel:"noopener noreferrer"}},[t._v("window.Function()"),s("OutboundLink")],1),t._v(" can replace "),s("code",[t._v("eval()")]),t._v(".")])]),t._v(" "),s("h1",{attrs:{id:"ec-lifecycle"}},[t._v("EC Lifecycle")]),t._v(" "),s("p",[t._v("Generally, we divide the EC life cycle into 3 parts: Creating, Execution and Termination.")]),t._v(" "),s("h2",{attrs:{id:"vo-and-ao"}},[t._v("VO and AO")]),t._v(" "),s("p",[t._v("We had better learn about what is VO("),s("strong",[t._v("V")]),t._v("ariable "),s("strong",[t._v("O")]),t._v("bject) and AO("),s("strong",[t._v("A")]),t._v("ctivation "),s("strong",[t._v("O")]),t._v("bject) to help us comprehend the lifecycle better."),s("br"),t._v(" "),s("strong",[t._v("VO")]),t._v(" is an object storing the "),s("strong",[t._v("identifiers")]),t._v(" can be visited in EC, including:")]),t._v(" "),s("ul",[s("li",[t._v("arguments object")]),t._v(" "),s("li",[t._v("Key-Value of Arguments and parameters")]),t._v(" "),s("li",[t._v("Function declaration")]),t._v(" "),s("li",[t._v("Variable declaration")]),t._v(" "),s("li",[t._v("this")])]),t._v(" "),s("p",[s("strong",[t._v("AO")]),t._v(" is an object generated from VO. Once creating a new EC or entering a function, "),s("strong",[t._v("AO")]),t._v(" would be created with all elements come from VO.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("VO and AO are both spec")]),t._v(" "),s("p",[t._v("The concepts of VO and AO exist in the specification only. According to specification, we cannot visit the data from "),s("strong",[t._v("VO")]),t._v(" because of JavaScript engine. We can only visit data from "),s("strong",[t._v("AO")]),t._v(" once we enter a function. It looks like something has be triggered. That's why we call it "),s("strong",[t._v("activation object")]),t._v("."),s("br"),t._v("\nWe seldom use both after ES5! We should learn "),s("a",{attrs:{href:"../.vuepress/public/assets/img/whyHoist.png"}},[t._v("Lexical & Variable Environment")]),t._v(" more.")])]),t._v(" "),s("h2",{attrs:{id:"compile-stage"}},[t._v("Compile Stage")]),t._v(" "),s("p",[t._v("Compile Stage - creating stage will do the following work:")]),t._v(" "),s("ul",[s("li",[t._v("Create "),s("strong",[t._v("Scope Chain")])]),t._v(" "),s("li",[t._v("Create AO from VO:\n"),s("ul",[s("li",[t._v("Create arguments object")]),t._v(" "),s("li",[t._v("Create Key-Value of arguments and parameters")]),t._v(" "),s("li",[t._v("Create function declaration")]),t._v(" "),s("li",[t._v("Create variable declaration")])])]),t._v(" "),s("li",[t._v("Create this")])]),t._v(" "),s("p",[t._v("There is something interesting here:")]),t._v(" "),s("ol",[s("li",[t._v("Variable and Function "),s("strong",[t._v("hoisting")]),t._v(".")]),t._v(" "),s("li",[s("a",{attrs:{href:"../.vuepress/public/assets/img/whyHoist.png"}},[t._v("Lexical environment and Variable environment")]),t._v(";")])]),t._v(" "),s("p",[t._v("To learn more about hoisting, we should recognize that JavaScript will do "),s("code",[t._v("compiling")]),t._v(" before executing. When JavaScript do the compiling, it will hoist the "),s("strong",[t._v("function")]),t._v(" or "),s("strong",[t._v("variable")]),t._v(" with "),s("code",[t._v("var")]),t._v(" keyword.")]),t._v(" "),s("p",[t._v("Look over "),s("strong",[t._v("variable")]),t._v(" hoisting firistly:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught ReferenceError: b is not defined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("var")]),t._v(" will hoist the declaration the identifier to the front-most of the code but "),s("code",[t._v("let")]),t._v(" not.")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("Then we look over "),s("strong",[t._v("function")]),t._v(" hoisting:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Function: foo1]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: foo2 is not a function")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: foo3 is not a function")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: foo3 is not a function")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("JavaScript engine scans the whole code before executing. When it find the "),s("code",[t._v("function")]),t._v(" declaration, it will hoist it. As for "),s("code",[t._v("foo2")]),t._v(", the JS engine would regard it as a variable. So it would only hoist it with initial value "),s("code",[t._v("undefined")]),t._v(".")]),t._v(" "),s("p",[t._v("The reason why we need hoisting is very interesting. It's easy to comprehend why we need hoisting in "),s("code",[t._v("function")]),t._v(" - if we want to invoke a function, we must create it before. And this feature would not cause too many problems. However, hoisting a "),s("code",[t._v("variable")]),t._v(" is really a bad idea. It would pollute global object and confuse programmer. Maybe we can glimpse the attitude according to Branden's twitter:"),s("br"),t._v(" "),s("img",{attrs:{src:a(374),alt:"Image"}})])])}),[],!1,null,null,null);n.default=e.exports}}]);